{"version":3,"sources":["/Users/phangty/Projects/fsf2018/a5-regform/src/$_lazy_route_resource lazy","/Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.css","/Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.html","/Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.ts","/Users/phangty/Projects/fsf2018/a5-regform/src/app/app.module.ts","/Users/phangty/Projects/fsf2018/a5-regform/src/app/shared/registration-user.ts","/Users/phangty/Projects/fsf2018/a5-regform/src/environments/environment.ts","/Users/phangty/Projects/fsf2018/a5-regform/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/phangty/Projects/fsf2018/a5-regform/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 offset-md-3 col-sm-8 offset-sm-2 col-xs-12\\\">\\n                <h1>User Registration</h1>\\n            </div>\\n        </div>\\n    \\n        <div class=\\\"row\\\" *ngIf=\\\"!isSubmitted\\\">\\n            <div class=\\\"col-md-6 offset-md-3 col-sm-8 offset-sm-2 col-xs-12\\\">\\n                <form #regForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n                    <div class=\\\"form-group\\\">\\n                        <div>\\n                            <label for=\\\"email\\\">Email Address</label>\\n                        </div>\\n                        \\n                        <input id=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"you@domain.com\\\" class=\\\"form-control\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required/> \\n                        <div *ngIf=\\\"email.errors && (email.touched || isSubmitted)\\\">\\n                            <div [hidden]=\\\"!email.errors.required && email.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                Email is required.\\n                            </div>\\n                            <div [hidden]=\\\"!email.errors.pattern\\\" class=\\\"help-block alert alert-danger\\\">\\n                                <span class=\\\"help-block alert\\\">\\n                                Email is invalid.\\n                                </span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <div>\\n                            <label for=\\\"password\\\">Password {{password.errors.required}}</label>\\n                        </div>\\n                        <input id=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"something secret\\\" class=\\\"form-control\\\" pattern=\\\"^(?=.*\\\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$\\\" required/>         \\n                        <div *ngIf=\\\"password.errors && (password.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!password.errors.required && password.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Password is required.\\n                                </div>\\n                                <div [hidden]=\\\"!password.errors.pattern\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    <span class=\\\"help-block alert\\\">Password must include special characters (!@#$%^&*). Alphanumeric and both uppercase & lowercase.\\n                                    </span>\\n                                </div>\\n                            </div> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <div>\\n                            <label for=\\\"confirmpassword\\\">Confirm Password</label>\\n                        </div>\\n                        <input id=\\\"confirmpassword\\\" #confirmpassword=\\\"ngModel\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"model.confirmPassword\\\" type=\\\"password\\\" placeholder=\\\"something secret\\\"  class=\\\"form-control\\\" required [required]=\\\"model.password\\\"/>\\n                        <div *ngIf=\\\"confirmpassword.errors && (confirmpassword.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!confirmpassword.errors.required && confirmpassword.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Confirm Password is required.\\n                                </div>\\n                        </div>\\n                        <div *ngIf=\\\"confirmpassword.dirty\\\" [hidden]=\\\"!(model.confirmPassword != model.password)\\\" class=\\\"help-block alert alert-danger\\\">\\n                                <span class=\\\"help-block alert alert-danger\\\">\\n                                    Password do not match.\\n                                </span>\\n\\n                        </div>      \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <div>\\n                            <label for=\\\"firstName\\\">First Name </label>\\n                        </div>\\n                        <input id=\\\"firstName\\\" #firstName=\\\"ngModel\\\" name=\\\"firstName\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.firstName\\\" placeholder=\\\"Emily\\\" class=\\\"form-control\\\" required/>\\n                        <div *ngIf=\\\"firstName.errors && (firstName.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!firstName.errors.required && firstName.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    First Name is required.\\n                                </div>\\n                        </div> \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <div>\\n                            <label for=\\\"lastName\\\">Last Name </label>\\n                        </div>\\n                        <input id=\\\"lastName\\\" #lastName=\\\"ngModel\\\" name=\\\"lastName\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.lastName\\\" placeholder=\\\"Tan\\\" class=\\\"form-control\\\" required/>\\n                        <div *ngIf=\\\"lastName.errors && (lastName.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!lastName.errors.required && lastName.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Last Name is required.\\n                                </div>\\n                        </div> \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"gender\\\">Gender</label>\\n                        <br/>\\n                        <input name=\\\"gender\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.gender\\\" value=\\\"{{gender[0]}}\\\"/> Male\\n                        <br/>\\n                        <input name=\\\"gender\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model.gender\\\" value=\\\"{{gender[1]}}\\\" /> Female\\n                    </div>\\n                    \\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"dob\\\">Date of Birth</label>\\n                        <input id=\\\"dob\\\" name=\\\"dob\\\" type=\\\"date\\\" #dateOfBirth=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.dateOfBirth\\\"  value=\\\"{{ model.dateOfBirth}}\\\" required/>\\n                        <div *ngIf=\\\"dateOfBirth.errors && (dateOfBirth.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!dateOfBirth.errors.required && dateOfBirth.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Date of Birth is required.\\n                                </div>\\n                        </div>  \\n                    </div>\\n                    \\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"address\\\">Address</label>\\n                            <textarea rows=\\\"4\\\" cols=\\\"50\\\" id=\\\"address\\\" name=\\\"address\\\" #address=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.address\\\" required>\\n                            </textarea>\\n                            <div *ngIf=\\\"address.errors && (address.touched || isSubmitted)\\\">\\n                                    <div [hidden]=\\\"!address.errors.required && address.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                        Address is required.\\n                                    </div>\\n                            </div>  \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"nationality\\\">Nationality</label>\\n                        <select class=\\\"form-control\\\" #nationality=\\\"ngModel\\\" id=\\\"nationality\\\" [(ngModel)]=\\\"model.nationality\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"onChange($event)\\\" required>\\n                            <option *ngFor=\\\"let nationality of nationalities\\\" [ngValue]=\\\"nationality.value\\\">{{nationality.desc}}</option>\\n                        </select>\\n                        <p *ngIf=\\\"nationalities.length > 3\\\">{{ ' There are more than 3 countries in the list !' | uppercase }}</p>\\n                        <div *ngIf=\\\"nationality.errors && (nationality.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!nationality.errors.required && nationality.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Nationality is required.\\n                                </div>\\n                        </div>\\n                        \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"contactNumber\\\">Contact Number</label>\\n                        <input id=\\\"contactNumber\\\"  #contactNumber=\\\"ngModel\\\" name=\\\"contactNumber\\\" type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"model.contactNumber\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\" pattern=\\\"[0-9]*\\\" required/>\\n                        <div *ngIf=\\\"contactNumber.errors && (contactNumber.touched || isSubmitted)\\\">\\n                                <div [hidden]=\\\"!contactNumber.errors.required && contactNumber.dirty\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    Contact Number is required.\\n                                </div>\\n                                <div [hidden]=\\\"!contactNumber.errors.pattern\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    <span class=\\\"help-block alert\\\">Contact No. is invalid\\n                                    </span>\\n                                </div>\\n                                <div [hidden]=\\\"!contactNumber.errors.minlength\\\" class=\\\"help-block alert alert-danger\\\">\\n                                    <span class=\\\"help-block alert\\\">Contact No. must be at least 8 digit long.\\n                                    </span>\\n                                </div>\\n                        </div>\\n                        \\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <hr/>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!regForm.form.valid\\\" class=\\\"btn btn-success\\\">Submit</button>\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"regForm.reset()\\\">Reset</button>\\n                    </div>\\n                </form>\\n    \\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\" *ngIf=\\\"isSubmitted\\\">\\n            <div class=\\\"col-6\\\" [ngStyle]=\\\"{'background-color':'grey'}\\\">\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.email}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.firstName}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.lastName}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.gender}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.address}}</label> \\n                    </div>    \\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.dateOfBirth}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.nationality}}</label> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label >{{model.contactNumber}}</label> \\n                    </div>\\n            </div>\\n        </div>\\n        \\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { RegistrationUser } from './shared/registration-user'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'app';\n  model = null;\n  gender: string[] = ['M', 'F'];\n  \n  nationalities = [ {desc:'Singapore', value:'SG'}, \n                    {desc: 'Malaysia', value:'MY'}, \n                    {desc:'Thailand', value:'TH'},  \n                    {desc:'Vietnam', value: 'VN'}];\n                    \n  isSubmitted: boolean = false;\n  result: string = \"\";\n  \n  ngOnInit() {\n    this.model = new RegistrationUser('','','','','','',null,'','MY','');\n  }\n  \n  // this is to handle when I click on a submit or save button.\n  onSubmit(){\n    console.log(this.model.email);\n    console.log(this.model.password);\n    console.log(this.model.confirmPassword);\n    console.log(this.model.firstName);\n    console.log(this.model.lastName);\n    console.log(this.model.gender);\n    console.log(this.model.dateOfBirth);\n    console.log(this.model.address);\n    console.log(this.model.nationality);\n    console.log(this.model.contactNumber);\n    this.isSubmitted = true;\n  }\n\n  onChange(event){\n    // empty function.\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/phangty/Projects/fsf2018/a5-regform/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/phangty/Projects/fsf2018/a5-regform/src/app/app.module.ts","export class RegistrationUser {\n    constructor(\n        public email: string,\n        public password: string,\n        public confirmPassword: string,\n        public firstName: string,\n        public lastName: string,\n        public gender: string,\n        public dateOfBirth: Date,\n        public address: string,\n        public nationality: string,\n        public contactNumber: string\n    ){\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/phangty/Projects/fsf2018/a5-regform/src/app/shared/registration-user.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/phangty/Projects/fsf2018/a5-regform/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/phangty/Projects/fsf2018/a5-regform/src/main.ts"],"sourceRoot":"webpack:///"}